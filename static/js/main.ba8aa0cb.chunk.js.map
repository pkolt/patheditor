{"version":3,"sources":["components/SearchForm.js","components/ListItem.js","components/List.js","components/Map.js","util.js","App.js","index.js"],"names":["React","memo","props","value","onChangeValue","onSubmit","e","preventDefault","className","type","placeholder","onChange","target","id","title","onClick","onRemove","href","items","map","item","key","centerPoint","onChangeItemPoint","mState","center","zoom","controls","plGeometry","point","query","ns","load","state","width","height","defaultGeometry","options","draggable","properties","balloonContentHeader","onDragEnd","event","get","geometry","getCoordinates","balloonCloseButton","strokeColor","strokeWidth","searchPoint","a","async","fetch","response","json","data","geoObjects","GeoObjectCollection","featureMember","points","obj","GeoObject","Point","pos","split","parseFloat","reverse","console","error","App","moscowPoint","useState","searchValue","setSearchValue","activeItemId","setActiveItemId","localStorage","getItem","JSON","parse","setItems","useMemo","activeItem","filter","firstItem","useEffect","setItem","stringify","onRemoveItem","useCallback","prevItems","onChangeSearchValue","uuid","onChangeActiveItem","SearchForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba8aa0cb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PointSearch = (props) => {\n    const {value, onChangeValue, onSubmit} = props;\n    return <form onSubmit={(e) => {\n                    e.preventDefault();\n                    onSubmit();\n                }}>\n               <input className=\"form-control\" \n                      type=\"text\" \n                      placeholder=\"Введите новую точку маршрута и нажмите Enter\" \n                      value={value}\n                      onChange={(e) => onChangeValue(e.target.value)}/>\n           </form>;\n}\nPointSearch.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeValue: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default React.memo(PointSearch);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListItem = (props) => {\n    const {id, title, onClick, onRemove} = props;\n    return <li className=\"list-group-item\">\n                <div className=\"d-flex w-100 justify-content-between\">\n                    <a href=\"#\" onClick={(e) => {\n                        e.preventDefault();\n                        onClick(id);\n                    }}>{title}</a>\n                    <button type=\"button\" className=\"btn btn-outline-danger btn-sm\" onClick={() => onRemove(id)}>Удалить</button>\n                </div>\n            </li>;\n}\n\nListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired\n};\n\nexport default React.memo(ListItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nconst List = (props) => {\n    const {items, onClick, onRemove} = props;\n    return <ul className=\"list-group mt-2\">\n        {items.map(\n            (item) => <ListItem key={item.id} \n                                     id={item.id}\n                                     title={item.title}\n                                     onClick={onClick}\n                                     onRemove={onRemove}/>\n        )}\n    </ul>;\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired\n};\n\nexport default React.memo(List);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {YMaps, Map as YMap, Placemark, Polyline} from 'react-yandex-maps';\n\nconst Map = (props) => {\n    const {centerPoint, items, onChangeItemPoint} = props;\n    const ymQuery = {\n        ns: 'use-load-option',\n        load: 'Map,Placemark,control.ZoomControl,geoObject.addon.balloon',\n    };\n    const mState = {\n        center: centerPoint, \n        zoom: 10, \n        controls: ['zoomControl']\n    };\n    const plGeometry = items.map(item => item.point);\n\n    return <YMaps query={ymQuery}>\n                <YMap state={mState} width=\"\" height={600}>\n                    {items.map((item) => <Placemark\n                                            key={item.id}\n                                            defaultGeometry={item.point}\n                                            options={{draggable: true}}\n                                            properties={{balloonContentHeader: item.title}}\n                                            onDragEnd={(event) => {\n                                                const point = event.get('target').geometry.getCoordinates();\n                                                onChangeItemPoint(item.id, point);\n                                            }}\n                                        />\n                    )}\n                    <Polyline\n                        geometry={plGeometry}\n                        options={{\n                            balloonCloseButton: false,\n                            strokeColor: '#ff0000',\n                            strokeWidth: 2\n                        }}\n                        />\n                </YMap>\n    </YMaps>;\n}\n\nMap.propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangeItemPoint: PropTypes.func.isRequired,\n    centerPoint: PropTypes.array.isRequired\n};\n\nexport default React.memo(Map);","const apikey = 'b5ca0b9b-9f4b-4cbf-bcbf-f562a8297253';\n\nexport const searchPoint = async (value) => {\n    try {\n        const response = await fetch(`https://geocode-maps.yandex.ru/1.x/?apikey=${apikey}&results=1&format=json&geocode=${value}`);\n        const data = await response.json();\n        const geoObjects = data.response.GeoObjectCollection.featureMember;\n        const points = geoObjects.map((obj) => {\n          const pos = obj.GeoObject.Point.pos;\n          const geometry = pos.split(' ').map(parseFloat).reverse();\n          return geometry;\n        });\n        return points[0];\n    } catch(error) {\n        console.error(error);\n    }\n}","import React, {useState, useMemo, useEffect, useCallback} from 'react';\nimport uuid from 'uuid/v1';\nimport SearchForm from './components/SearchForm';\nimport List from './components/List';\nimport Map from './components/Map';\nimport {searchPoint} from './util';\n\nfunction App() {\n  const moscowPoint = [55.75, 37.57];\n  const localStorageKey = 'path-editor';\n  const getItemsLocalStorage = () => localStorage.getItem(localStorageKey) && JSON.parse(localStorage.getItem(localStorageKey));\n  const setItemsLocalStorage = (value) => localStorage.setItem(localStorageKey, JSON.stringify(value));\n\n  const [searchValue, setSearchValue] = useState('');\n  const [activeItemId, setActiveItemId] = useState('');\n  const [items, setItems] = useState(getItemsLocalStorage());\n\n  const centerPoint = useMemo(() => {\n    const activeItem = items.filter(item => item.id === activeItemId)[0];\n    const firstItem = items[0];\n    return (activeItem && activeItem.point) || (firstItem && firstItem.point) || moscowPoint;\n  }, [items, activeItemId]);\n\n\n  useEffect(() => {\n    setItemsLocalStorage(items);\n  }, [items]);\n\n  const onRemoveItem = useCallback((id) => {\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n  }, []);\n\n  const onChangeSearchValue = useCallback((value) => {\n    setSearchValue(value);\n  }, []);\n\n  const onSubmit = useCallback(async () => {\n    if (searchValue) {\n      const point = await searchPoint(searchValue);\n      if (point) {\n        setItems(prevItems => [\n          {\n            id: uuid(),\n            title: searchValue,\n            point\n          },\n          ...prevItems\n        ]);\n        setSearchValue('');\n      }\n    }\n  }, [searchValue]);\n\n  const onChangeItemPoint = useCallback((id, point) => {\n    setItems(prevItems => prevItems.map(item => item.id === id ? {...item, point} : item));\n  }, []);\n\n  const onChangeActiveItem = useCallback((id) => setActiveItemId(id), []);\n\n  return <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <SearchForm value={searchValue} onChangeValue={onChangeSearchValue} onSubmit={onSubmit}/>\n              <List items={items} onRemove={onRemoveItem} onClick={onChangeActiveItem}/>\n            </div>\n            <div className=\"col-sm\">\n              <Map centerPoint={centerPoint} items={items} onChangeItemPoint={onChangeItemPoint}/>\n            </div>\n          </div>\n        </div>;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'whatwg-fetch';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}